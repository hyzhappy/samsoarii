<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="MainWindow_File" xml:space="preserve">
    <value>File(_F)</value>
  </data>
  <data name="MainWindow_Edit" xml:space="preserve">
    <value>Edit(_E)</value>
  </data>
  <data name="MainWindow_View" xml:space="preserve">
    <value>View(_V)</value>
  </data>
  <data name="MainWindow_Proj" xml:space="preserve">
    <value>Project(_P)</value>
  </data>
  <data name="MainWindow_Tool" xml:space="preserve">
    <value>Tool(_T)</value>
  </data>
  <data name="MainWindow_Language" xml:space="preserve">
    <value>Language(_L)</value>
  </data>
  <data name="MainWindow_Help" xml:space="preserve">
    <value>Help(_H)</value>
  </data>
  <data name="MainWindow_New_Proj" xml:space="preserve">
    <value>New Project</value>
  </data>
  <data name="MainWindow_Open_Proj" xml:space="preserve">
    <value>Open Project</value>
  </data>
  <data name="MainWindow_Save_Proj" xml:space="preserve">
    <value>Save Project</value>
  </data>
  <data name="MainWindow_Save_As_Proj" xml:space="preserve">
    <value>Save As</value>
  </data>
  <data name="MainWindow_Recent_Proj" xml:space="preserve">
    <value>Recent Project(_F)</value>
  </data>
  <data name="MainWindow_Close_Proj" xml:space="preserve">
    <value>Close Project(_C)</value>
  </data>
  <data name="MainWindow_Exit" xml:space="preserve">
    <value>Exit(_X)</value>
  </data>
  <data name="MainWindow_Undo" xml:space="preserve">
    <value>Undo</value>
  </data>
  <data name="MainWindow_Redo" xml:space="preserve">
    <value>Redo</value>
  </data>
  <data name="MainWindow_Cut" xml:space="preserve">
    <value>Cut</value>
  </data>
  <data name="MainWindow_Paste" xml:space="preserve">
    <value>Paste</value>
  </data>
  <data name="MainWindow_Copy" xml:space="preserve">
    <value>Copy</value>
  </data>
  <data name="MainWindow_Del" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="MainWindow_Select_All" xml:space="preserve">
    <value>Select All(_A)</value>
  </data>
  <data name="MainWindow_Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="MainWindow_Replace" xml:space="preserve">
    <value>Replace</value>
  </data>
  <data name="MainWindow_Zoom_In" xml:space="preserve">
    <value>Zoom In</value>
  </data>
  <data name="MainWindow_Zoom_Out" xml:space="preserve">
    <value>Zoom Out</value>
  </data>
  <data name="MainWindow_Comment_Mode" xml:space="preserve">
    <value>Comment Mode</value>
  </data>
  <data name="MainWindow_Project_Explorer" xml:space="preserve">
    <value>Project Explorer</value>
  </data>
  <data name="MainWindow_Soft_Element_Manager" xml:space="preserve">
    <value>Soft Element Manager</value>
  </data>
  <data name="MainWindow_Soft_Element_Init" xml:space="preserve">
    <value>Soft Element Initialize</value>
  </data>
  <data name="MainWindow_Error_List" xml:space="preserve">
    <value>Error List</value>
  </data>
  <data name="MainWindow_Monitor_List" xml:space="preserve">
    <value>Monitor List(_M)</value>
  </data>
  <data name="MainWindow_Breakpoint_List" xml:space="preserve">
    <value>Breakpoint List</value>
  </data>
  <data name="MainWindow_Add_SubRoutine" xml:space="preserve">
    <value>Add SubRoutine(_R)</value>
  </data>
  <data name="MainWindow_Add_FuncBlock" xml:space="preserve">
    <value>Add FuncBlock(_F)</value>
  </data>
  <data name="MainWindow_Add_Modbus_Table" xml:space="preserve">
    <value>Add Modbus Table(_M)</value>
  </data>
  <data name="MainWindow_Property_Proj" xml:space="preserve">
    <value>Property(_P)</value>
  </data>
  <data name="MainWindow_Upload" xml:space="preserve">
    <value>Upload</value>
  </data>
  <data name="MainWindow_Download" xml:space="preserve">
    <value>Download</value>
  </data>
  <data name="MainWindow_Monitor" xml:space="preserve">
    <value>Monitor</value>
  </data>
  <data name="MainWindow_Simulation" xml:space="preserve">
    <value>Simulation</value>
  </data>
  <data name="MainWindow_Ret_Edit_Mode" xml:space="preserve">
    <value>Return To Edit Mode(_E)</value>
  </data>
  <data name="MainWindow_Proj_Check" xml:space="preserve">
    <value>Program Check(_C)</value>
  </data>
  <data name="MainWindow_Ladder_Check" xml:space="preserve">
    <value>Ladder Check(_L)</value>
  </data>
  <data name="MainWindow_Funcblock_Check" xml:space="preserve">
    <value>FuncBlock Check(_F)</value>
  </data>
  <data name="MainWindow_Option" xml:space="preserve">
    <value>Option(_O)</value>
  </data>
  <data name="MainWindow_Chinese" xml:space="preserve">
    <value>Chinese(_C)</value>
  </data>
  <data name="MainWindow_English" xml:space="preserve">
    <value>English(_E)</value>
  </data>
  <data name="MainWindow_View_Help" xml:space="preserve">
    <value>View Help(_V)</value>
  </data>
  <data name="MainWindow_Online_Upgrade" xml:space="preserve">
    <value>Online Upgrade(_U)</value>
  </data>
  <data name="MainWindow_About" xml:space="preserve">
    <value>About(_A)</value>
  </data>
  <data name="MainWindow_Compile" xml:space="preserve">
    <value>Compile</value>
  </data>
  <data name="MainWindow_Ladder_Mode" xml:space="preserve">
    <value>Ladder Mode</value>
  </data>
  <data name="MainWindow_Inst_Mode" xml:space="preserve">
    <value>Instruction Mode</value>
  </data>
  <data name="MainWindow_Row_Insert" xml:space="preserve">
    <value>Row Insert</value>
  </data>
  <data name="MainWindow_Row_Delete" xml:space="preserve">
    <value>Row Delete</value>
  </data>
  <data name="MainWindow_Element_List" xml:space="preserve">
    <value>Soft Element List</value>
  </data>
  <data name="MainWindow_Normally_Open_Contact" xml:space="preserve">
    <value>Normally Open Contact</value>
  </data>
  <data name="MainWindow_Immediately_Open" xml:space="preserve">
    <value>Immediately Open</value>
  </data>
  <data name="MainWindow_Normally_Closed" xml:space="preserve">
    <value>Normally Closed</value>
  </data>
  <data name="MainWindow_Immediately_Close" xml:space="preserve">
    <value>Immediately Close</value>
  </data>
  <data name="MainWindow_Rising_Edge_Pulse" xml:space="preserve">
    <value>Rising Edge Pulse</value>
  </data>
  <data name="MainWindow_Falling_Edge_Pulse" xml:space="preserve">
    <value>Falling Edge Pulse</value>
  </data>
  <data name="MainWindow_Rising_Edge_Of_Result" xml:space="preserve">
    <value>Rising Edge Of Result</value>
  </data>
  <data name="MainWindow_Falling_Edge_Of_Result" xml:space="preserve">
    <value>Falling Edge Of Result</value>
  </data>
  <data name="MainWindow_Reversed_Result" xml:space="preserve">
    <value>Reversed Result</value>
  </data>
  <data name="MainWindow_Output_Coil" xml:space="preserve">
    <value>Output Coil</value>
  </data>
  <data name="MainWindow_Immediately_Output_Coil" xml:space="preserve">
    <value>Immediately Output Coil</value>
  </data>
  <data name="MainWindow_Horizontal_Line" xml:space="preserve">
    <value>Horizontal Line</value>
  </data>
  <data name="MainWindow_Vertical_Line" xml:space="preserve">
    <value>Vertical Line</value>
  </data>
  <data name="MainWindow_Horizontal_Line_Delete" xml:space="preserve">
    <value>Horizontal Line Delete</value>
  </data>
  <data name="MainWindow_Vertical_Line_Delete" xml:space="preserve">
    <value>Vertical Line Delete</value>
  </data>
  <data name="MainWindow_Communication_Settings" xml:space="preserve">
    <value>Communication Settings</value>
  </data>
  <data name="MainWindow_System_Settings" xml:space="preserve">
    <value>System Settings</value>
  </data>
  <data name="MainWindow_PLC_Settings" xml:space="preserve">
    <value>PLC Settings</value>
  </data>
  <data name="MainWindow_Simulation_Run" xml:space="preserve">
    <value>Simulation Run</value>
  </data>
  <data name="MainWindow_Simulation_Pause" xml:space="preserve">
    <value>Simulation Pause</value>
  </data>
  <data name="MainWindow_Simulation_Stop" xml:space="preserve">
    <value>Simulation Stop</value>
  </data>
  <data name="MainWindow_Current_Breakpoint" xml:space="preserve">
    <value>Current Breakpoint</value>
  </data>
  <data name="MainWindow_By_Process" xml:space="preserve">
    <value>By Process</value>
  </data>
  <data name="MainWindow_By_Sentence" xml:space="preserve">
    <value>By Sentence</value>
  </data>
  <data name="MainWindow_Jump_Out" xml:space="preserve">
    <value>Jump Out</value>
  </data>
  <data name="MainWindow_Breakpoint" xml:space="preserve">
    <value>Breakpoint</value>
  </data>
  <data name="LadderDiagram_Edit_Program_Comment" xml:space="preserve">
    <value>Edit Program Comment</value>
  </data>
  <data name="LadderDiagram_Program_Comment" xml:space="preserve">
    <value>Program Comment</value>
  </data>
  <data name="LadderNetwork_Edit_Network_Comment" xml:space="preserve">
    <value>Edit Network Comment</value>
  </data>
  <data name="LadderNetwork_Element_Cut" xml:space="preserve">
    <value>Element Cut</value>
  </data>
  <data name="LadderNetwork_Element_Paste" xml:space="preserve">
    <value>Element Paste</value>
  </data>
  <data name="LadderNetwork_Element_Copy" xml:space="preserve">
    <value>Element Copy</value>
  </data>
  <data name="LadderNetwork_Element_Delete" xml:space="preserve">
    <value>Element Delete</value>
  </data>
  <data name="LadderNetwork_Insert_before" xml:space="preserve">
    <value>Insert before</value>
  </data>
  <data name="LadderNetwork_Insert_After" xml:space="preserve">
    <value>Insert After</value>
  </data>
  <data name="LadderNetwork_Insert_End" xml:space="preserve">
    <value>Insert End</value>
  </data>
  <data name="LadderNetwork_Network_Insert" xml:space="preserve">
    <value>Network Insert</value>
  </data>
  <data name="LadderNetwork_Network_Cut" xml:space="preserve">
    <value>Network Cut</value>
  </data>
  <data name="LadderNetwork_Network_Paste" xml:space="preserve">
    <value>Network Paste</value>
  </data>
  <data name="LadderNetwork_Network_Copy" xml:space="preserve">
    <value>Network Copy</value>
  </data>
  <data name="LadderNetwork_Network_Delete" xml:space="preserve">
    <value>Network Delete</value>
  </data>
  <data name="LadderNetwork_Shield_Network" xml:space="preserve">
    <value>Shield Network</value>
  </data>
  <data name="Modbus_Slave_Station_Number" xml:space="preserve">
    <value>Slave Number</value>
  </data>
  <data name="Modbus_Function_Code" xml:space="preserve">
    <value>Function Code</value>
  </data>
  <data name="Modbus_Slave_Register" xml:space="preserve">
    <value>Slave Register</value>
  </data>
  <data name="Modbus_Slave_Length" xml:space="preserve">
    <value>Slave Length</value>
  </data>
  <data name="Modbus_Master_Register" xml:space="preserve">
    <value>Master Register</value>
  </data>
  <data name="Modbus_Current_Row_Up" xml:space="preserve">
    <value>Current Row Up</value>
  </data>
  <data name="Modbus_Current_Row_Down" xml:space="preserve">
    <value>Current Row Down</value>
  </data>
  <data name="Modbus_Create_New_Table" xml:space="preserve">
    <value>Create New Table</value>
  </data>
  <data name="Modbus_Delete_Table" xml:space="preserve">
    <value>Delete Table</value>
  </data>
  <data name="Modbus_Current_Table_Up" xml:space="preserve">
    <value>Current Table Up</value>
  </data>
  <data name="Modbus_Current_Table_Down" xml:space="preserve">
    <value>Current Table Down</value>
  </data>
  <data name="Report_Display_Output_Source" xml:space="preserve">
    <value>Display Output Source:</value>
  </data>
  <data name="Report_All_Sources" xml:space="preserve">
    <value>All Sources</value>
  </data>
  <data name="Report_Generate" xml:space="preserve">
    <value>Generate</value>
  </data>
  <data name="Report_Funcblock_Compilation" xml:space="preserve">
    <value>Funcblock Compilation</value>
  </data>
  <data name="ErrorReportWindow_Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="ErrorReportWindow_Warning" xml:space="preserve">
    <value>Warning</value>
  </data>
  <data name="ErrorReportWindow_Explanation" xml:space="preserve">
    <value>Explanation</value>
  </data>
  <data name="Routine" xml:space="preserve">
    <value>Routine</value>
  </data>
  <data name="Coordinate" xml:space="preserve">
    <value>Coordinate</value>
  </data>
  <data name="Instruction" xml:space="preserve">
    <value>Instruction</value>
  </data>
  <data name="Network" xml:space="preserve">
    <value>Network</value>
  </data>
  <data name="Current_Routine" xml:space="preserve">
    <value>Current Routine</value>
  </data>
  <data name="All_Routine" xml:space="preserve">
    <value>All Routine</value>
  </data>
  <data name="Element" xml:space="preserve">
    <value>Element</value>
  </data>
  <data name="LadderDiagram" xml:space="preserve">
    <value>LadderDiagram</value>
  </data>
  <data name="Modbus_Table_Name" xml:space="preserve">
    <value>Table Name</value>
  </data>
  <data name="Modbus_Table_Comment" xml:space="preserve">
    <value>Table Comment</value>
  </data>
  <data name="Ensure" xml:space="preserve">
    <value>Ensure</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Font" xml:space="preserve">
    <value>Font</value>
  </data>
  <data name="Other" xml:space="preserve">
    <value>Other</value>
  </data>
  <data name="Project_Setting" xml:space="preserve">
    <value>Project Setting</value>
  </data>
  <data name="Help" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="PLC_Device_Model" xml:space="preserve">
    <value>Device Model</value>
  </data>
  <data name="PLC_Communication_Parameters" xml:space="preserve">
    <value>Communication Parameters</value>
  </data>
  <data name="PLC_Password_Setting" xml:space="preserve">
    <value>Password Setting</value>
  </data>
  <data name="PLC_Analog_Quantity" xml:space="preserve">
    <value>Analog Quantity</value>
  </data>
  <data name="PLC_Filter_Parameters" xml:space="preserve">
    <value>Filter Parameters</value>
  </data>
  <data name="PLC_Retentive_Zone_Settings" xml:space="preserve">
    <value>Retentive Zone Settings</value>
  </data>
  <data name="PLC_Expansion_Module" xml:space="preserve">
    <value>Expansion Module</value>
  </data>
  <data name="Inst_Bit" xml:space="preserve">
    <value>Bit</value>
  </data>
  <data name="Inst_Compare" xml:space="preserve">
    <value>Compare</value>
  </data>
  <data name="Inst_Convert" xml:space="preserve">
    <value>Convert</value>
  </data>
  <data name="Inst_LogicOperation" xml:space="preserve">
    <value>LogicOperation</value>
  </data>
  <data name="Inst_Move" xml:space="preserve">
    <value>Move</value>
  </data>
  <data name="Inst_FloatCalculation" xml:space="preserve">
    <value>FloatCalculation</value>
  </data>
  <data name="Inst_IntegerCalculation" xml:space="preserve">
    <value>IntegerCalculation</value>
  </data>
  <data name="Inst_Timer" xml:space="preserve">
    <value>Timer</value>
  </data>
  <data name="Inst_Counter" xml:space="preserve">
    <value>Counter</value>
  </data>
  <data name="Inst_ProgramControl" xml:space="preserve">
    <value>ProgramControl</value>
  </data>
  <data name="Inst_Shift" xml:space="preserve">
    <value>Shift</value>
  </data>
  <data name="Inst_Interrupt" xml:space="preserve">
    <value>Interrupt</value>
  </data>
  <data name="Inst_RealTime" xml:space="preserve">
    <value>RealTime</value>
  </data>
  <data name="Inst_Communication" xml:space="preserve">
    <value>Communication</value>
  </data>
  <data name="Inst_Pulse" xml:space="preserve">
    <value>Pulse</value>
  </data>
  <data name="Inst_HighCount" xml:space="preserve">
    <value>HighCount</value>
  </data>
  <data name="Inst_Auxiliar" xml:space="preserve">
    <value>Auxiliar</value>
  </data>
  <data name="SubRoutine" xml:space="preserve">
    <value>SubRoutine</value>
  </data>
  <data name="FuncBlock" xml:space="preserve">
    <value>FuncBlock</value>
  </data>
  <data name="PTV_No_Function" xml:space="preserve">
    <value>No Function</value>
  </data>
  <data name="Project" xml:space="preserve">
    <value>Project</value>
  </data>
  <data name="MainRoutine" xml:space="preserve">
    <value>MainRoutine</value>
  </data>
  <data name="Modbus_Table" xml:space="preserve">
    <value>Modbus Table</value>
  </data>
  <data name="PTV_New_Folder" xml:space="preserve">
    <value>New Folder</value>
  </data>
  <data name="PTV_New_SubRoutine" xml:space="preserve">
    <value>New SubRoutine</value>
  </data>
  <data name="PTV_New_Network" xml:space="preserve">
    <value>New Network</value>
  </data>
  <data name="PTV_New_Funcblock" xml:space="preserve">
    <value>New Funcblock</value>
  </data>
  <data name="PTV_New_Modbus_Table" xml:space="preserve">
    <value>New Modbus Table</value>
  </data>
  <data name="PTV_Rename" xml:space="preserve">
    <value>Rename</value>
  </data>
  <data name="PTV_Folder" xml:space="preserve">
    <value>Folder</value>
  </data>
  <data name="PTV_Table" xml:space="preserve">
    <value>Table</value>
  </data>
  <data name="Library_Function" xml:space="preserve">
    <value>Library Function</value>
  </data>
  <data name="Replace_Result" xml:space="preserve">
    <value>Replace Result</value>
  </data>
  <data name="Setting" xml:space="preserve">
    <value>Setting</value>
  </data>
  <data name="Content" xml:space="preserve">
    <value>Content</value>
  </data>
  <data name="Current_Text" xml:space="preserve">
    <value>Current Text</value>
  </data>
  <data name="All_Text" xml:space="preserve">
    <value>All Text</value>
  </data>
  <data name="Position" xml:space="preserve">
    <value>Position</value>
  </data>
  <data name="Use_Regular_Expression" xml:space="preserve">
    <value>Use Regular Expression</value>
  </data>
  <data name="IgnoreCase" xml:space="preserve">
    <value>IgnoreCase</value>
  </data>
  <data name="Jump" xml:space="preserve">
    <value>Jump</value>
  </data>
  <data name="Enable_Disable" xml:space="preserve">
    <value>Enable/Disable</value>
  </data>
  <data name="Release" xml:space="preserve">
    <value>Release</value>
  </data>
  <data name="Release_All" xml:space="preserve">
    <value>Release All</value>
  </data>
  <data name="Interrupt_Condition" xml:space="preserve">
    <value>Interrupt Condition</value>
  </data>
  <data name="Execution_Number" xml:space="preserve">
    <value>Execution Number</value>
  </data>
  <data name="Element_Address" xml:space="preserve">
    <value>Element Address</value>
  </data>
  <data name="Data_Type" xml:space="preserve">
    <value>Data Type</value>
  </data>
  <data name="Element_Length" xml:space="preserve">
    <value>Element Length</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="Delete_All" xml:space="preserve">
    <value>Delete All</value>
  </data>
  <data name="On_Off_Value" xml:space="preserve">
    <value>ON/OFF/Value</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="Displays_Details" xml:space="preserve">
    <value>Displays Details</value>
  </data>
  <data name="Clear_Selected" xml:space="preserve">
    <value>Clear Selected</value>
  </data>
  <data name="Element_Name" xml:space="preserve">
    <value>Element Name</value>
  </data>
  <data name="Element_Comment" xml:space="preserve">
    <value>Element Comment</value>
  </data>
  <data name="Element_Alias" xml:space="preserve">
    <value>Element Alias</value>
  </data>
  <data name="Select_Element_Range" xml:space="preserve">
    <value>Select Element Range</value>
  </data>
  <data name="Used_Element" xml:space="preserve">
    <value>Used Element</value>
  </data>
  <data name="Annotated_Element" xml:space="preserve">
    <value>Annotated Element</value>
  </data>
  <data name="Import_CSV" xml:space="preserve">
    <value>Import CSV</value>
  </data>
  <data name="Export_CSV" xml:space="preserve">
    <value>Export CSV</value>
  </data>
  <data name="Add_Element" xml:space="preserve">
    <value>Add Element</value>
  </data>
  <data name="Intra_Address" xml:space="preserve">
    <value>Intra Address</value>
  </data>
  <data name="Offset_Element_Select" xml:space="preserve">
    <value>Offset Element Select</value>
  </data>
  <data name="Batch" xml:space="preserve">
    <value>Batch</value>
  </data>
  <data name="Number_Of_Additions" xml:space="preserve">
    <value>Number Of Additions</value>
  </data>
  <data name="Quick_Add_Element" xml:space="preserve">
    <value>Quick Add Element</value>
  </data>
  <data name="Routine_Range" xml:space="preserve">
    <value>Routine Range</value>
  </data>
  <data name="Please_Select_Range" xml:space="preserve">
    <value>Please Select Range:</value>
  </data>
  <data name="Network_Range" xml:space="preserve">
    <value>Network Range</value>
  </data>
  <data name="All_Networks" xml:space="preserve">
    <value>All Networks</value>
  </data>
  <data name="Network_Number_Range" xml:space="preserve">
    <value>Network Number Range</value>
  </data>
  <data name="Custom" xml:space="preserve">
    <value>Custom</value>
  </data>
  <data name="Quick_Add" xml:space="preserve">
    <value>Quick Add</value>
  </data>
  <data name="Monitor_Start" xml:space="preserve">
    <value>Monitor Start</value>
  </data>
  <data name="Monitor_Stop" xml:space="preserve">
    <value>Monitor Stop</value>
  </data>
  <data name="Element_Delete" xml:space="preserve">
    <value>Element Delete</value>
  </data>
  <data name="ON_OFF_CurrentValue" xml:space="preserve">
    <value>CurrentValue</value>
  </data>
  <data name="Set_Value" xml:space="preserve">
    <value>Set Value</value>
  </data>
  <data name="Edit_Color" xml:space="preserve">
    <value>Edit Color</value>
  </data>
  <data name="Font_Range" xml:space="preserve">
    <value>Font Range</value>
  </data>
  <data name="Font_Size" xml:space="preserve">
    <value>Font Size</value>
  </data>
  <data name="Font_Style" xml:space="preserve">
    <value>Font Style</value>
  </data>
  <data name="Font_Color" xml:space="preserve">
    <value>Font Color</value>
  </data>
  <data name="Effect_Preview" xml:space="preserve">
    <value>Effect Preview</value>
  </data>
  <data name="Timed_Save_Settings" xml:space="preserve">
    <value>Timed Save Settings</value>
  </data>
  <data name="Timed_Save" xml:space="preserve">
    <value>Timed Save</value>
  </data>
  <data name="Minute" xml:space="preserve">
    <value>*Minute</value>
  </data>
  <data name="Baud_Rate" xml:space="preserve">
    <value>Baud Rate</value>
  </data>
  <data name="Data_Bits" xml:space="preserve">
    <value>Data Bit</value>
  </data>
  <data name="Stop_Bit" xml:space="preserve">
    <value>Stop Bit</value>
  </data>
  <data name="Check_Code" xml:space="preserve">
    <value>Check Code</value>
  </data>
  <data name="Free_Port_Communication" xml:space="preserve">
    <value>Free Port Communication</value>
  </data>
  <data name="Modbus_Master_Station" xml:space="preserve">
    <value>Modbus Master Station</value>
  </data>
  <data name="Modbus_Slaver_Station" xml:space="preserve">
    <value>Modbus Slave Station</value>
  </data>
  <data name="Station_Number_Setting" xml:space="preserve">
    <value>Station Number Setting</value>
  </data>
  <data name="Timeout" xml:space="preserve">
    <value>Timeout</value>
  </data>
  <data name="Default" xml:space="preserve">
    <value>Default</value>
  </data>
  <data name="Buffer_Bit" xml:space="preserve">
    <value>Buffer Bit</value>
  </data>
  <data name="Input" xml:space="preserve">
    <value>Input</value>
  </data>
  <data name="Mode" xml:space="preserve">
    <value>Mode</value>
  </data>
  <data name="Channel" xml:space="preserve">
    <value>Channel</value>
  </data>
  <data name="Enabled" xml:space="preserve">
    <value>Enabled</value>
  </data>
  <data name="Average_Number_Of_Samples" xml:space="preserve">
    <value>Average Number Of Samples</value>
  </data>
  <data name="Current_Value_Of_Samples" xml:space="preserve">
    <value>Current Value Of Samples</value>
  </data>
  <data name="Digital_Quantity_Range" xml:space="preserve">
    <value>Digital Quantity Range</value>
  </data>
  <data name="Output" xml:space="preserve">
    <value>Output</value>
  </data>
  <data name="Expand_Module_Settings" xml:space="preserve">
    <value>Expand Module Settings</value>
  </data>
  <data name="Enable_Extension" xml:space="preserve">
    <value>Enable Extension</value>
  </data>
  <data name="Select_Module" xml:space="preserve">
    <value>Select Module</value>
  </data>
  <data name="Module_Type" xml:space="preserve">
    <value>Module Type</value>
  </data>
  <data name="Module_One" xml:space="preserve">
    <value>Module One</value>
  </data>
  <data name="Module_Two" xml:space="preserve">
    <value>Module Two</value>
  </data>
  <data name="Module_Three" xml:space="preserve">
    <value>Module Three</value>
  </data>
  <data name="Module_Four" xml:space="preserve">
    <value>Module Four</value>
  </data>
  <data name="Module_Five" xml:space="preserve">
    <value>Module Five</value>
  </data>
  <data name="Module_Six" xml:space="preserve">
    <value>Module Six</value>
  </data>
  <data name="Module_Seven" xml:space="preserve">
    <value>Module Seven</value>
  </data>
  <data name="Module_Eight" xml:space="preserve">
    <value>Module Eight</value>
  </data>
  <data name="Filter_Setting" xml:space="preserve">
    <value>Filter Setting</value>
  </data>
  <data name="Enable_Filter_Time" xml:space="preserve">
    <value>Enable Filter Time</value>
  </data>
  <data name="Power_off_Retention_Area_Setting" xml:space="preserve">
    <value>Power-off Retention Area Setting</value>
  </data>
  <data name="Length" xml:space="preserve">
    <value>Length</value>
  </data>
  <data name="Start_Address" xml:space="preserve">
    <value>Start Address</value>
  </data>
  <data name="Not_Clear_While_Download" xml:space="preserve">
    <value>Not Clear While Download</value>
  </data>
  <data name="Current_Color" xml:space="preserve">
    <value>Current Color</value>
  </data>
  <data name="Preview_Color" xml:space="preserve">
    <value>Preview Color</value>
  </data>
  <data name="Read_Bit" xml:space="preserve">
    <value>Read Bit</value>
  </data>
  <data name="Read_Word" xml:space="preserve">
    <value>Read Word</value>
  </data>
  <data name="Write_Bit" xml:space="preserve">
    <value>Write Bit</value>
  </data>
  <data name="Write_Word" xml:space="preserve">
    <value>Write Word</value>
  </data>
  <data name="Write_Bits" xml:space="preserve">
    <value>Write Bits</value>
  </data>
  <data name="Write_Words" xml:space="preserve">
    <value>Write Words</value>
  </data>
  <data name="Register_Range" xml:space="preserve">
    <value>Register Address Range</value>
  </data>
  <data name="MessageBox_Communication_Failed" xml:space="preserve">
    <value>Communication failed! Please check the parameter settings.</value>
  </data>
  <data name="MessageBox_Communication_Success" xml:space="preserve">
    <value>Communication success!</value>
  </data>
  <data name="Message_Path" xml:space="preserve">
    <value>Specified path does not exist!</value>
  </data>
  <data name="Message_File_Name" xml:space="preserve">
    <value>The file name can not be empty</value>
  </data>
  <data name="Message_File_Exist" xml:space="preserve">
    <value>Specifies that the path already exists with the same name file</value>
  </data>
  <data name="Message_Project_Loaded" xml:space="preserve">
    <value>The project file has been loaded!</value>
  </data>
  <data name="Message_Project_Error" xml:space="preserve">
    <value>Incorrect project file, project file is corrupt!</value>
  </data>
  <data name="Message_File_Moved" xml:space="preserve">
    <value>File has been moved or deleted!</value>
  </data>
  <data name="Message_Confirm_Save" xml:space="preserve">
    <value>Confirm Save</value>
  </data>
  <data name="Message_Changed" xml:space="preserve">
    <value>has been changed,is it saved?</value>
  </data>
  <data name="Important" xml:space="preserve">
    <value>Important</value>
  </data>
  <data name="Message_Delete" xml:space="preserve">
    <value>Can not be restored after deletion, is it OK?</value>
  </data>
  <data name="Message_Name_Needed" xml:space="preserve">
    <value>Name is required!</value>
  </data>
  <data name="Message_illegal_Char" xml:space="preserve">
    <value>There are illegal characters:</value>
  </data>
  <data name="Message_Fold_File_Exist" xml:space="preserve">
    <value>With the name already exists under the folder</value>
  </data>
  <data name="Message_Name_Format_illegal" xml:space="preserve">
    <value>Name format is illegal!</value>
  </data>
  <data name="Message_Subroutine_Exist" xml:space="preserve">
    <value>SubRoutine already exists</value>
  </data>
  <data name="Message_Funcblock_Exist" xml:space="preserve">
    <value>Funcblock already exists</value>
  </data>
  <data name="Message_Renamed_Error" xml:space="preserve">
    <value>There are already renaming items!</value>
  </data>
  <data name="Message_Text" xml:space="preserve">
    <value>The current text is read-only and can not be changed!</value>
  </data>
  <data name="Message_Missing_Parameters" xml:space="preserve">
    <value>Missing parameters.</value>
  </data>
  <data name="Message_Intra_Error" xml:space="preserve">
    <value>The index counter may overlap, so use it carefully.</value>
  </data>
  <data name="Counter" xml:space="preserve">
    <value>Counter</value>
  </data>
  <data name="Message_Has_Been_Used" xml:space="preserve">
    <value>Has been used!</value>
  </data>
  <data name="Message_Used_Error" xml:space="preserve">
    <value>is tried to be used elsewhere.</value>
  </data>
  <data name="Message_FOR" xml:space="preserve">
    <value>The FOR instruction can not be used in the same network with another output instruction.</value>
  </data>
  <data name="Message_LBL" xml:space="preserve">
    <value>The LBL instruction can not be conditional.</value>
  </data>
  <data name="Message_NEXT" xml:space="preserve">
    <value>The NEXT instruction can not be used in the same network with another output instruction.</value>
  </data>
  <data name="Message_FOR_Not_Found" xml:space="preserve">
    <value>The corresponding FOR instruction was not found.</value>
  </data>
  <data name="Message_Intra_Coil_Error" xml:space="preserve">
    <value>The index coil output may overlap, please use it carefully.</value>
  </data>
  <data name="Jump_Mark" xml:space="preserve">
    <value>Jump mark</value>
  </data>
  <data name="Message_Multi_Coil" xml:space="preserve">
    <value>Multi-coil output error!</value>
  </data>
  <data name="Message_Func_Not_Found" xml:space="preserve">
    <value>User function not found</value>
  </data>
  <data name="User_Function" xml:space="preserve">
    <value>User function</value>
  </data>
  <data name="Message_CALL" xml:space="preserve">
    <value>Can not be called by the CALLM instruction.</value>
  </data>
  <data name="Message_Modbus_Table" xml:space="preserve">
    <value>Modbus table not found</value>
  </data>
  <data name="is_illegal" xml:space="preserve">
    <value>is illegal</value>
  </data>
  <data name="Message_SubRoutine_Not_Found" xml:space="preserve">
    <value>Can not find subroutine</value>
  </data>
  <data name="Message_Stack" xml:space="preserve">
    <value>The stack top value is missing as a condition.</value>
  </data>
  <data name="Message_NEXT_Not_Found" xml:space="preserve">
    <value>The corresponding terminator NEXT was not found.</value>
  </data>
  <data name="Message_Jump_Not_Found" xml:space="preserve">
    <value>Can not find the corresponding jump mark</value>
  </data>
  <data name="Message_Interrupt_1" xml:space="preserve">
    <value>It is forbidden to use the output coil in the interrupt subroutine.</value>
  </data>
  <data name="Message_Interrupt_2" xml:space="preserve">
    <value>It is forbidden to use edge conditional judgment in interrupt subroutine.</value>
  </data>
  <data name="Message_Interrupt_3" xml:space="preserve">
    <value>It is forbidden to use the timers in the interrupt subroutine.</value>
  </data>
  <data name="Message_Interrupt_4" xml:space="preserve">
    <value>It is forbidden to use the counter in the interrupt subroutine.</value>
  </data>
  <data name="Message_Interrupt_5" xml:space="preserve">
    <value>It is forbidden to use this instruction in the interrupt subroutine.</value>
  </data>
  <data name="Message_LBL_Error" xml:space="preserve">
    <value>The LBL instruction can not be used in the same network with another output instruction.</value>
  </data>
  <data name="Message_Input_Empty" xml:space="preserve">
    <value>The input is empty.</value>
  </data>
  <data name="Message_Instruction_Not_Exist" xml:space="preserve">
    <value>The input instruction does not exist!</value>
  </data>
  <data name="Message_Subroutine_Name_Required" xml:space="preserve">
    <value>You must enter the subroutine name.</value>
  </data>
  <data name="Message_Func_Name_Required" xml:space="preserve">
    <value>You must enter a function name.</value>
  </data>
  <data name="Message_CFunc_Not_Found" xml:space="preserve">
    <value>Can not find C function</value>
  </data>
  <data name="Message_Modbus_Name_Requied" xml:space="preserve">
    <value>You must enter the MODBUS table name.</value>
  </data>
  <data name="Message_Func_Params_Num_Error" xml:space="preserve">
    <value>The number of input parameters does not match the function!</value>
  </data>
  <data name="Message_Input_Params_Num_Error" xml:space="preserve">
    <value>The number of input parameters does not match the instruction!</value>
  </data>
  <data name="Message_Can_Not_CALL" xml:space="preserve">
    <value>can not be called by CALLM instruction. Please check the number and type of parameters.</value>
  </data>
  <data name="Message_Modbus_Table_Error" xml:space="preserve">
    <value>Modbus form is illegal, please check whether the form is complete.</value>
  </data>
  <data name="Message_Table_Exist" xml:space="preserve">
    <value>Table exist!</value>
  </data>
  <data name="Message_Bit_Required" xml:space="preserve">
    <value>Need to enter bit register!</value>
  </data>
  <data name="Message_Word_Requried" xml:space="preserve">
    <value>Need to enter word register!</value>
  </data>
  <data name="Message_Table_Name_Exist" xml:space="preserve">
    <value>Table name exist!</value>
  </data>
  <data name="Message_Tooltip" xml:space="preserve">
    <value>Added element will be deleted, will it continue?</value>
  </data>
  <data name="Message_Network_Range_Error" xml:space="preserve">
    <value>Network range error</value>
  </data>
  <data name="Message_Number_Error" xml:space="preserve">
    <value>Numeric input error!</value>
  </data>
  <data name="Message_Element_Has_Added" xml:space="preserve">
    <value>The element has been added!</value>
  </data>
  <data name="Variable_Modification" xml:space="preserve">
    <value>Variable Modification</value>
  </data>
  <data name="Message_Can_Not_Be_Written" xml:space="preserve">
    <value>This type of register can not be written!</value>
  </data>
  <data name="Message_Over_Max_Len" xml:space="preserve">
    <value>Over the maximum length range, please re-enter!</value>
  </data>
  <data name="Invalid_Input" xml:space="preserve">
    <value>Invalid input</value>
  </data>
  <data name="Message_Converter_Error" xml:space="preserve">
    <value>Type can not be converted between!</value>
  </data>
  <data name="Message_File_Requried" xml:space="preserve">
    <value>Please select the file</value>
  </data>
  <data name="Message_Alias_Exist" xml:space="preserve">
    <value>Alias has already exist</value>
  </data>
  <data name="Program_Correct" xml:space="preserve">
    <value>Program Correct!</value>
  </data>
  <data name="Open_Error" xml:space="preserve">
    <value>Open error in the cursor</value>
  </data>
  <data name="Short_Error" xml:space="preserve">
    <value>Short error in the cursor</value>
  </data>
  <data name="Selfloop_Error" xml:space="preserve">
    <value>Selfloop error in the cursor</value>
  </data>
  <data name="HybridLink_Error" xml:space="preserve">
    <value>HybridLink error in the cursor</value>
  </data>
  <data name="Special_Instruction_Error" xml:space="preserve">
    <value>Special instruction error in the cursor</value>
  </data>
  <data name="Function_Block_Correct" xml:space="preserve">
    <value>Funcblocks all correct!</value>
  </data>
  <data name="Constant_Monitor" xml:space="preserve">
    <value>Constant can not be monitored!</value>
  </data>
  <data name="Intra_Cross" xml:space="preserve">
    <value>Intra register address crossed!</value>
  </data>
  <data name="Exceed_Adddress" xml:space="preserve">
    <value>Added variable exceeds this register address limit!</value>
  </data>
  <data name="Address_Cross" xml:space="preserve">
    <value>Address range is crossed!</value>
  </data>
  <data name="New_Version" xml:space="preserve">
    <value>Is the latest version!</value>
  </data>
  <data name="Update_Whether" xml:space="preserve">
    <value>Whether to update</value>
  </data>
  <data name="Update_Or_Not" xml:space="preserve">
    <value>Is there a new version updated, is it updated?</value>
  </data>
  <data name="Update_Process" xml:space="preserve">
    <value>The update process will close the program, please make sure the file is saved correctly!</value>
  </data>
  <data name="Update_Size" xml:space="preserve">
    <value>The update file size is:</value>
  </data>
  <data name="Connect_Failed" xml:space="preserve">
    <value>Connection failed, please check your network settings!</value>
  </data>
  <data name="Ladder_Title" xml:space="preserve">
    <value>Ladder title</value>
  </data>
  <data name="Comment" xml:space="preserve">
    <value>Comment</value>
  </data>
  <data name="Demo_Message_Element_Comment" xml:space="preserve">
    <value>X3:Here is an element comment</value>
  </data>
  <data name="Element_Comment_D0" xml:space="preserve">
    <value>D0:Element comment</value>
  </data>
  <data name="Element_Comment_D1" xml:space="preserve">
    <value>D1:Element comment</value>
  </data>
  <data name="Element_Comment_K0" xml:space="preserve">
    <value>K0:Element comment</value>
  </data>
  <data name="Element_Comment_K1" xml:space="preserve">
    <value>K1:Element comment</value>
  </data>
  <data name="Element_Comment_K2" xml:space="preserve">
    <value>K2:Element comment</value>
  </data>
  <data name="Word_Equal" xml:space="preserve">
    <value>Word equal</value>
  </data>
  <data name="Word_Not_Equal" xml:space="preserve">
    <value>Word not equal</value>
  </data>
  <data name="Word_Less" xml:space="preserve">
    <value>Word less than</value>
  </data>
  <data name="Word_More" xml:space="preserve">
    <value>Word more than</value>
  </data>
  <data name="Word_Not_Less" xml:space="preserve">
    <value>Word not less than</value>
  </data>
  <data name="Word_Not_More" xml:space="preserve">
    <value>Word not more than</value>
  </data>
  <data name="DWord_Equal" xml:space="preserve">
    <value>DWord equal</value>
  </data>
  <data name="DWord_Less" xml:space="preserve">
    <value>DWord less than</value>
  </data>
  <data name="DWord_More" xml:space="preserve">
    <value>DWord more than</value>
  </data>
  <data name="DWord_Not_Equal" xml:space="preserve">
    <value>DWord not equal</value>
  </data>
  <data name="DWord_Not_Less" xml:space="preserve">
    <value>DWord not less than</value>
  </data>
  <data name="DWord_Not_More" xml:space="preserve">
    <value>DWord not more than</value>
  </data>
  <data name="Float_Equal" xml:space="preserve">
    <value>Float equal</value>
  </data>
  <data name="Float_Not_Equal" xml:space="preserve">
    <value>Float not equal</value>
  </data>
  <data name="Float_More_Than" xml:space="preserve">
    <value>Float more than</value>
  </data>
  <data name="Float_Less_Than" xml:space="preserve">
    <value>Float less than</value>
  </data>
  <data name="Float_Not_Less_Than" xml:space="preserve">
    <value>Float not less than</value>
  </data>
  <data name="Float_Not_More_Than" xml:space="preserve">
    <value>Float not more than</value>
  </data>
  <data name="Set_Coil" xml:space="preserve">
    <value>Set coil</value>
  </data>
  <data name="Set_Immediately" xml:space="preserve">
    <value>Set immediately</value>
  </data>
  <data name="Reset_Coil" xml:space="preserve">
    <value>Reset coil</value>
  </data>
  <data name="Reset_Immediately" xml:space="preserve">
    <value>Reset immediately</value>
  </data>
  <data name="Alternating_Output" xml:space="preserve">
    <value>Alternating output</value>
  </data>
  <data name="Pulse_Alternation" xml:space="preserve">
    <value>Pulse alternation</value>
  </data>
  <data name="Word_To_DWord" xml:space="preserve">
    <value>Word to DWord</value>
  </data>
  <data name="DWord_To_Word" xml:space="preserve">
    <value>DWord to Word</value>
  </data>
  <data name="DWord_To_Float" xml:space="preserve">
    <value>DWord to Float</value>
  </data>
  <data name="BCD_Code_To_Integer" xml:space="preserve">
    <value>BCD code to integer</value>
  </data>
  <data name="Integer_To_BCD_Code" xml:space="preserve">
    <value>Integer to BCD code</value>
  </data>
  <data name="Trunc" xml:space="preserve">
    <value>Trunc</value>
  </data>
  <data name="Round" xml:space="preserve">
    <value>Round</value>
  </data>
  <data name="Word_Reverse" xml:space="preserve">
    <value>Word reverse</value>
  </data>
  <data name="DWord_Reverse" xml:space="preserve">
    <value>DWord reverse</value>
  </data>
  <data name="Word_And" xml:space="preserve">
    <value>Word(and)</value>
  </data>
  <data name="Word_Or" xml:space="preserve">
    <value>Word(or)</value>
  </data>
  <data name="DWord_And" xml:space="preserve">
    <value>DWord(and)</value>
  </data>
  <data name="DWord_Or" xml:space="preserve">
    <value>DWord(or)</value>
  </data>
  <data name="DWord_XOR" xml:space="preserve">
    <value>DWord(XOR)</value>
  </data>
  <data name="Word_XOR" xml:space="preserve">
    <value>Word(XOR)</value>
  </data>
  <data name="Move_Word" xml:space="preserve">
    <value>Move Word</value>
  </data>
  <data name="Move_DWord" xml:space="preserve">
    <value>Move DWord</value>
  </data>
  <data name="Move_Float" xml:space="preserve">
    <value>Move Float</value>
  </data>
  <data name="Move_Blocks_Word" xml:space="preserve">
    <value>Move blocks of Word</value>
  </data>
  <data name="Move_Blocks_DWord" xml:space="preserve">
    <value>Move blocks of DWord</value>
  </data>
  <data name="Word_Add" xml:space="preserve">
    <value>Word add</value>
  </data>
  <data name="DWord_Add" xml:space="preserve">
    <value>DWord add</value>
  </data>
  <data name="Float_Add" xml:space="preserve">
    <value>Float add</value>
  </data>
  <data name="Word_Minus" xml:space="preserve">
    <value>Word minus</value>
  </data>
  <data name="DWord_Minus" xml:space="preserve">
    <value>DWord minus</value>
  </data>
  <data name="Float_Minus" xml:space="preserve">
    <value>Float minus</value>
  </data>
  <data name="Multiply" xml:space="preserve">
    <value>Multiply</value>
  </data>
  <data name="Divide" xml:space="preserve">
    <value>Divide</value>
  </data>
  <data name="Word_Multiply" xml:space="preserve">
    <value>Word multiply</value>
  </data>
  <data name="DWord_Multiply" xml:space="preserve">
    <value>DWord multiply</value>
  </data>
  <data name="Float_Multiply" xml:space="preserve">
    <value>Float multiply</value>
  </data>
  <data name="Word_Divide" xml:space="preserve">
    <value>Word divide</value>
  </data>
  <data name="DWord_Divide" xml:space="preserve">
    <value>DWord divide</value>
  </data>
  <data name="Float_Divide" xml:space="preserve">
    <value>Float divide</value>
  </data>
  <data name="DWord_Add_One" xml:space="preserve">
    <value>DWord(add one)</value>
  </data>
  <data name="Word_Add_One" xml:space="preserve">
    <value>Word(add one)</value>
  </data>
  <data name="Word_Minus_One" xml:space="preserve">
    <value>Word(minus one)</value>
  </data>
  <data name="DWord_Minus_One" xml:space="preserve">
    <value>DWord(minus one)</value>
  </data>
  <data name="Sin_Operation" xml:space="preserve">
    <value>sin(Operation)</value>
  </data>
  <data name="Cos_Operation" xml:space="preserve">
    <value>Cos(Operation)</value>
  </data>
  <data name="Tan_Operation" xml:space="preserve">
    <value>Tan(Operation)</value>
  </data>
  <data name="Sqrt_Operation" xml:space="preserve">
    <value>Sqrt(Operation)</value>
  </data>
  <data name="EXP_Operation" xml:space="preserve">
    <value>EXP(Operation)</value>
  </data>
  <data name="LN_Operation" xml:space="preserve">
    <value>LN(Operation)</value>
  </data>
  <data name="TON_Inst" xml:space="preserve">
    <value>Turn on delay timer</value>
  </data>
  <data name="TONR_Inst" xml:space="preserve">
    <value>Turn on delay protection timer</value>
  </data>
  <data name="TOF_Inst" xml:space="preserve">
    <value>Turn off delay timer</value>
  </data>
  <data name="CTU_Inst" xml:space="preserve">
    <value>Counter(Up)</value>
  </data>
  <data name="CTD_Inst" xml:space="preserve">
    <value>Counter(Down)</value>
  </data>
  <data name="CTUD_Inst" xml:space="preserve">
    <value>Counter(Up&amp;Down)</value>
  </data>
  <data name="FOR_Inst" xml:space="preserve">
    <value>Cycle begin</value>
  </data>
  <data name="NEXT_Inst" xml:space="preserve">
    <value>Cycle end</value>
  </data>
  <data name="JMP_Inst" xml:space="preserve">
    <value>Program jump</value>
  </data>
  <data name="LBL_Inst" xml:space="preserve">
    <value>Jump label</value>
  </data>
  <data name="CALL_Inst" xml:space="preserve">
    <value>Subroutine call</value>
  </data>
  <data name="CALLM_Inst" xml:space="preserve">
    <value>Funcblock call</value>
  </data>
  <data name="SHL_Inst" xml:space="preserve">
    <value>Word left shift</value>
  </data>
  <data name="SHR_Inst" xml:space="preserve">
    <value>Word right shift</value>
  </data>
  <data name="SHLD_Inst" xml:space="preserve">
    <value>DWord left shift</value>
  </data>
  <data name="SHRD_Inst" xml:space="preserve">
    <value>DWord right shift</value>
  </data>
  <data name="SHLB_Inst" xml:space="preserve">
    <value>Bit left shift</value>
  </data>
  <data name="SHRB_Inst" xml:space="preserve">
    <value>Bit right shift</value>
  </data>
  <data name="ROL_Inst" xml:space="preserve">
    <value>Word loop left</value>
  </data>
  <data name="ROR_Inst" xml:space="preserve">
    <value>Word loop right</value>
  </data>
  <data name="ROLD_Inst" xml:space="preserve">
    <value>DWord loop left</value>
  </data>
  <data name="RORD_Inst" xml:space="preserve">
    <value>DWord loop right</value>
  </data>
  <data name="ATCH_Inst" xml:space="preserve">
    <value>Interrupt binding</value>
  </data>
  <data name="DTCH_Inst" xml:space="preserve">
    <value>Interrupt release</value>
  </data>
  <data name="EI_Inst" xml:space="preserve">
    <value>Interrupt enable</value>
  </data>
  <data name="DI_Inst" xml:space="preserve">
    <value>Interrupt disabled</value>
  </data>
  <data name="TRD_Inst" xml:space="preserve">
    <value>Real-time reading</value>
  </data>
  <data name="TWR_Inst" xml:space="preserve">
    <value>Real-time write</value>
  </data>
  <data name="MBUS_Inst" xml:space="preserve">
    <value>Modbus communication</value>
  </data>
  <data name="SEND_Inst" xml:space="preserve">
    <value>Send</value>
  </data>
  <data name="REV_Inst" xml:space="preserve">
    <value>Receive</value>
  </data>
  <data name="PLSF_Inst" xml:space="preserve">
    <value>Frequency pulse(Word)</value>
  </data>
  <data name="DPLSF_Inst" xml:space="preserve">
    <value>Frequency pulse(DWord)</value>
  </data>
  <data name="PWM_Inst" xml:space="preserve">
    <value>Pulse width modulation(Word)</value>
  </data>
  <data name="DPWM_Inst" xml:space="preserve">
    <value>Pulse width modulation(DWord)</value>
  </data>
  <data name="PLSY_Inst" xml:space="preserve">
    <value>Single-stage no acceleration and deceleration pulse(Word)</value>
  </data>
  <data name="DPLSY_Inst" xml:space="preserve">
    <value>Single-stage no acceleration and deceleration pulse(DWord)</value>
  </data>
  <data name="PLSR_Inst" xml:space="preserve">
    <value>One-way multi-stage pulse(Word)</value>
  </data>
  <data name="DPLSR_Inst" xml:space="preserve">
    <value>One-way multi-stage pulse(DWord)</value>
  </data>
  <data name="PLSRD_Inst" xml:space="preserve">
    <value>Two-way multi-stage pulse(Word)</value>
  </data>
  <data name="DPLSRD_Inst" xml:space="preserve">
    <value>Two-way multi-stage pulse(DWord)</value>
  </data>
  <data name="PLSNEXT_Inst" xml:space="preserve">
    <value>Pulse jump</value>
  </data>
  <data name="PLSSTOP_Inst" xml:space="preserve">
    <value>Pulse stop</value>
  </data>
  <data name="ZRN_Inst" xml:space="preserve">
    <value>Return to origin(Word)</value>
  </data>
  <data name="DZRN_Inst" xml:space="preserve">
    <value>Return to origin(DWord)</value>
  </data>
  <data name="PTO_Inst" xml:space="preserve">
    <value>Relative position multi - stage pulse control(DWord)</value>
  </data>
  <data name="DRVI_Inst" xml:space="preserve">
    <value>Relative position single pulse output(Word)</value>
  </data>
  <data name="DDRVI_Inst" xml:space="preserve">
    <value>Relative position single pulse output(DWord)</value>
  </data>
  <data name="LOG_Inst" xml:space="preserve">
    <value>Logarithm(10)</value>
  </data>
  <data name="POW_Inst" xml:space="preserve">
    <value>Power series</value>
  </data>
  <data name="FACT_Inst" xml:space="preserve">
    <value>factorial</value>
  </data>
  <data name="CMP_Inst" xml:space="preserve">
    <value>Compare(Word)</value>
  </data>
  <data name="CMPD_Inst" xml:space="preserve">
    <value>Compare(DWord)</value>
  </data>
  <data name="CMPF_Inst" xml:space="preserve">
    <value>Compare(Float)</value>
  </data>
  <data name="ZCP_Inst" xml:space="preserve">
    <value>Zone Compare(Word)</value>
  </data>
  <data name="ZCPD_Inst" xml:space="preserve">
    <value>Zone Compare(DWord)</value>
  </data>
  <data name="ZCPF_Inst" xml:space="preserve">
    <value>Zone Compare(Float)</value>
  </data>
  <data name="NEG_Inst" xml:space="preserve">
    <value>complement(Word)</value>
  </data>
  <data name="NEGD_Inst" xml:space="preserve">
    <value>complement(DWord)</value>
  </data>
  <data name="XCH_Inst" xml:space="preserve">
    <value>exchange(Word)</value>
  </data>
  <data name="XCHD_Inst" xml:space="preserve">
    <value>exchange(DWord)</value>
  </data>
  <data name="XCHF_Inst" xml:space="preserve">
    <value>exchange(Float)</value>
  </data>
  <data name="CML_Inst" xml:space="preserve">
    <value>Reverse and move(Word)</value>
  </data>
  <data name="CMLD_Inst" xml:space="preserve">
    <value>Reverse and move(DWord)</value>
  </data>
  <data name="SMOV_Inst" xml:space="preserve">
    <value>Shift and move</value>
  </data>
  <data name="FMOV_Inst" xml:space="preserve">
    <value>multicast(Word)</value>
  </data>
  <data name="FMOVD_Inst" xml:space="preserve">
    <value>multicast(DWord)</value>
  </data>
  <data name="Project_Load" xml:space="preserve">
    <value>Project Loading ...</value>
  </data>
  <data name="Funcblock_Check" xml:space="preserve">
    <value>Funcblock is being Checked ...</value>
  </data>
  <data name="LadderDiagram_check" xml:space="preserve">
    <value>LadderDiagram is being Checked ...</value>
  </data>
  <data name="Message_Invalid_Function_Name" xml:space="preserve">
    <value>Invalid function name.</value>
  </data>
  <data name="Item_Rename" xml:space="preserve">
    <value>There is currently a item that is being renamed!</value>
  </data>
  <data name="Download_Failed" xml:space="preserve">
    <value>Download failed,please check the network or contact our technical support！</value>
  </data>
  <data name="Upload_Encryption" xml:space="preserve">
    <value>Upload Encryption</value>
  </data>
  <data name="Download_Encryption" xml:space="preserve">
    <value>Download Encryption</value>
  </data>
  <data name="Monitor_Encryption" xml:space="preserve">
    <value>Monitor Encryption</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password:</value>
  </data>
  <data name="Password_Empty" xml:space="preserve">
    <value>Password can not be empty</value>
  </data>
  <data name="MessageBox_Download_Successd" xml:space="preserve">
    <value>Download Successd</value>
  </data>
  <data name="Project_Download" xml:space="preserve">
    <value>Project Download</value>
  </data>
  <data name="SB_Program" xml:space="preserve">
    <value>Project: </value>
  </data>
  <data name="SB_Routine" xml:space="preserve">
    <value>Routine: </value>
  </data>
  <data name="SB_Func" xml:space="preserve">
    <value>Func: </value>
  </data>
  <data name="SB_Modbus" xml:space="preserve">
    <value>Table: </value>
  </data>
  <data name="SB_Network" xml:space="preserve">
    <value>Network: </value>
  </data>
  <data name="SB_Column" xml:space="preserve">
    <value>Column:</value>
  </data>
  <data name="SB_Row" xml:space="preserve">
    <value>Row:</value>
  </data>
  <data name="Ready" xml:space="preserve">
    <value>Ready!</value>
  </data>
  <data name="Project_Preparing" xml:space="preserve">
    <value>Project preparing</value>
  </data>
  <data name="Project_Saved" xml:space="preserve">
    <value>The project has been saved</value>
  </data>
  <data name="Func_Changed" xml:space="preserve">
    <value>The function block has changed</value>
  </data>
  <data name="Ladder_Changed" xml:space="preserve">
    <value>The ladder has changed</value>
  </data>
  <data name="Project_Config_Changed" xml:space="preserve">
    <value>The project configuration has changed</value>
  </data>
  <data name="Change_Mode" xml:space="preserve">
    <value>The current mode can not be modified for the ladder, please switch to edit mode first!</value>
  </data>
  <data name="Downloading" xml:space="preserve">
    <value>Downloading...</value>
  </data>
  <data name="Download_Fail" xml:space="preserve">
    <value>Download fail</value>
  </data>
  <data name="FuncBlock_Correct" xml:space="preserve">
    <value>The function block is correct!</value>
  </data>
  <data name="FuncBlock_Error" xml:space="preserve">
    <value>The function block is error!</value>
  </data>
  <data name="Ladder_Correct" xml:space="preserve">
    <value>The ladder is correct!</value>
  </data>
  <data name="Ladder_Error" xml:space="preserve">
    <value>The ladder is error!</value>
  </data>
  <data name="Message_LBL_Warning" xml:space="preserve">
    <value>Warning!</value>
  </data>
  <data name="Timed_Update_PLC" xml:space="preserve">
    <value>Regularly updated PLC commands setting</value>
  </data>
  <data name="Timed_Update" xml:space="preserve">
    <value>Timed update</value>
  </data>
  <data name="Second" xml:space="preserve">
    <value>*Second</value>
  </data>
  <data name="About" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="Project_Changed" xml:space="preserve">
    <value>Project changed</value>
  </data>
  <data name="ModBus_Changed" xml:space="preserve">
    <value>Modbus table changed!</value>
  </data>
  <data name="Check_Setting_Header" xml:space="preserve">
    <value>Multi-coil setting</value>
  </data>
  <data name="Check_Coil_Output" xml:space="preserve">
    <value>Check the multi-coil output</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="Unknowed_Exception" xml:space="preserve">
    <value>There is an unknown error in the program. Please contact our technical support and get help!</value>
  </data>
  <data name="Add_Operation_Forbidden" xml:space="preserve">
    <value>add operation can not be performed!</value>
  </data>
  <data name="NO" xml:space="preserve">
    <value>no</value>
  </data>
  <data name="YES" xml:space="preserve">
    <value>yes</value>
  </data>
  <data name="AddNewSubRoutine" xml:space="preserve">
    <value>AddNewSubRoutine</value>
  </data>
  <data name="Annotation_Edit" xml:space="preserve">
    <value>Annotation Edit</value>
  </data>
  <data name="Auto_Check" xml:space="preserve">
    <value>Auto Check</value>
  </data>
  <data name="Brief_Description" xml:space="preserve">
    <value>Brief Description</value>
  </data>
  <data name="Browse" xml:space="preserve">
    <value>Browse</value>
  </data>
  <data name="Cancel_All_Force" xml:space="preserve">
    <value>Cancel Al Force</value>
  </data>
  <data name="Cancel_Force" xml:space="preserve">
    <value>Cancel Force</value>
  </data>
  <data name="CommunicationSetting" xml:space="preserve">
    <value>Communication Setting</value>
  </data>
  <data name="Communication_Download_Data" xml:space="preserve">
    <value>Download Data</value>
  </data>
  <data name="Communication_Parameter_Setting" xml:space="preserve">
    <value>Communication Parameter Setting</value>
  </data>
  <data name="Communication_Test" xml:space="preserve">
    <value>Communication Test</value>
  </data>
  <data name="Connection_Mode" xml:space="preserve">
    <value>Connection Mode</value>
  </data>
  <data name="CSV_Export" xml:space="preserve">
    <value>CSV Export</value>
  </data>
  <data name="CSV_Import" xml:space="preserve">
    <value>CSV Import</value>
  </data>
  <data name="Data_Bit" xml:space="preserve">
    <value>Data Bit</value>
  </data>
  <data name="Detailed_Description" xml:space="preserve">
    <value>Detailed Description</value>
  </data>
  <data name="Element_Parameter_Setting" xml:space="preserve">
    <value>Element Parameter Setting</value>
  </data>
  <data name="Element_Value_Modify" xml:space="preserve">
    <value>ElementValueModify</value>
  </data>
  <data name="Export" xml:space="preserve">
    <value>Export</value>
  </data>
  <data name="File" xml:space="preserve">
    <value>File</value>
  </data>
  <data name="File_Name" xml:space="preserve">
    <value>File Name</value>
  </data>
  <data name="Force_OFF" xml:space="preserve">
    <value>Force OFF</value>
  </data>
  <data name="Force_ON" xml:space="preserve">
    <value>Force ON</value>
  </data>
  <data name="Import" xml:space="preserve">
    <value>Import</value>
  </data>
  <data name="Initialize" xml:space="preserve">
    <value>Initialize</value>
  </data>
  <data name="Instruction_Input" xml:space="preserve">
    <value>Instruction Input</value>
  </data>
  <data name="LaddreDiagram" xml:space="preserve">
    <value>LadderDiagram</value>
  </data>
  <data name="Language_Locale_Setting" xml:space="preserve">
    <value>Language Locale Setting</value>
  </data>
  <data name="Lock" xml:space="preserve">
    <value>Lock</value>
  </data>
  <data name="Manual" xml:space="preserve">
    <value>Manual</value>
  </data>
  <data name="Memory_Used" xml:space="preserve">
    <value>Memory Used:</value>
  </data>
  <data name="Message_Already_Exist" xml:space="preserve">
    <value>already exists in the current directory</value>
  </data>
  <data name="Message_Default" xml:space="preserve">
    <value>Do you want to restore the default?</value>
  </data>
  <data name="Message_Is_Override" xml:space="preserve">
    <value>Whether it is covered</value>
  </data>
  <data name="Message_Lang" xml:space="preserve">
    <value>Changes to language settings only take effect after program restart!</value>
  </data>
  <data name="Modify" xml:space="preserve">
    <value>Modify</value>
  </data>
  <data name="Monitor" xml:space="preserve">
    <value>Monitor(_M)</value>
  </data>
  <data name="Network_Number" xml:space="preserve">
    <value>Network Number</value>
  </data>
  <data name="New_Project" xml:space="preserve">
    <value>New Project</value>
  </data>
  <data name="Number_Lock" xml:space="preserve">
    <value>Number Lock</value>
  </data>
  <data name="Parameter_Description" xml:space="preserve">
    <value>Parameter Description</value>
  </data>
  <data name="Parse_Error_By_Wrong_Separator" xml:space="preserve">
    <value>Parse Error By Wrong Separator</value>
  </data>
  <data name="Path" xml:space="preserve">
    <value>Path</value>
  </data>
  <data name="PLC_Type" xml:space="preserve">
    <value>PLC Type</value>
  </data>
  <data name="Program" xml:space="preserve">
    <value>Program</value>
  </data>
  <data name="Project_Name" xml:space="preserve">
    <value>Project Name</value>
  </data>
  <data name="Separator_Select" xml:space="preserve">
    <value>Separator Select</value>
  </data>
  <data name="Serialport" xml:space="preserve">
    <value>Serialport</value>
  </data>
  <data name="SubRoutine_Name" xml:space="preserve">
    <value>SubRoutine Name</value>
  </data>
  <data name="Valid_Range" xml:space="preserve">
    <value>The valid range is</value>
  </data>
  <data name="Write_In" xml:space="preserve">
    <value>Write In</value>
  </data>
  <data name="Write_OFF" xml:space="preserve">
    <value>Write OFF</value>
  </data>
  <data name="Write_ON" xml:space="preserve">
    <value>Write ON</value>
  </data>
  <data name="New_Project_Name" xml:space="preserve">
    <value>New project</value>
  </data>
  <data name="New_Folder" xml:space="preserve">
    <value>New folder</value>
  </data>
  <data name="New_FuncBlock" xml:space="preserve">
    <value>New function block</value>
  </data>
  <data name="New_Routine" xml:space="preserve">
    <value>New routine</value>
  </data>
  <data name="Simulate_Closing" xml:space="preserve">
    <value>Closing simulation...</value>
  </data>
  <data name="Simulate_Initing" xml:space="preserve">
    <value>Initializing simulation...</value>
  </data>
  <data name="Generating_Final" xml:space="preserve">
    <value>Generating executable file...</value>
  </data>
  <data name="Monitor_Closing" xml:space="preserve">
    <value>Closing monitor...</value>
  </data>
  <data name="Simulate_Error" xml:space="preserve">
    <value>Opps, there is something wrong happened while initializing.</value>
  </data>
  <data name="Command_Not_Execute" xml:space="preserve">
    <value>The current command is not executable!</value>
  </data>
  <data name="Key_Combination" xml:space="preserve">
    <value>Key combination</value>
  </data>
  <data name="Key_Pressed" xml:space="preserve">
    <value>has been pressed, waiting to press the second key ...</value>
  </data>
  <data name="Not_Command" xml:space="preserve">
    <value>is not a command!</value>
  </data>
  <data name="Simulate" xml:space="preserve">
    <value>Simulate(_S)</value>
  </data>
  <data name="Maximize" xml:space="preserve">
    <value>Maximize</value>
  </data>
  <data name="Minimize" xml:space="preserve">
    <value>Minimize</value>
  </data>
  <data name="Restore" xml:space="preserve">
    <value>Restore</value>
  </data>
  <data name="Information" xml:space="preserve">
    <value>Information</value>
  </data>
  <data name="All_Information" xml:space="preserve">
    <value>All informations:</value>
  </data>
  <data name="No_Information" xml:space="preserve">
    <value>No informations</value>
  </data>
  <data name="LadderNetwork_AddBreakpoint" xml:space="preserve">
    <value>Add Breakpoint</value>
  </data>
  <data name="LadderNetwork_RemoveBreakpoint" xml:space="preserve">
    <value>Remove Breakpoint</value>
  </data>
  <data name="LadderNetwork_SettingBreakpoint" xml:space="preserve">
    <value>Breakpoint Setting</value>
  </data>
  <data name="LadderNetwork_JumpToThis" xml:space="preserve">
    <value>Jump to this</value>
  </data>
  <data name="LadderUnit_LocationError" xml:space="preserve">
    <value>Try to insert ladder unit at an invalid location!</value>
  </data>
  <data name="Routine_SelectedRange" xml:space="preserve">
    <value>Selected Range</value>
  </data>
  <data name="Ladder_Network" xml:space="preserve">
    <value>This is a ladder network</value>
  </data>
  <data name="Ladder_Program" xml:space="preserve">
    <value>This is a ladder program</value>
  </data>
  <data name="Zoom_Out" xml:space="preserve">
    <value>Zoom Out(_O)</value>
  </data>
  <data name="Zoom_In" xml:space="preserve">
    <value>Zoom In(_I)</value>
  </data>
  <data name="Upload" xml:space="preserve">
    <value>Upload(_U)</value>
  </data>
  <data name="Download" xml:space="preserve">
    <value>Download(_D)</value>
  </data>
  <data name="Comment_Mode" xml:space="preserve">
    <value>Comment Mode(_C)</value>
  </data>
  <data name="Project_Explorer" xml:space="preserve">
    <value>Project Explorer(_P)</value>
  </data>
  <data name="Soft_Element_Manager" xml:space="preserve">
    <value>Soft Element Manager(_E)</value>
  </data>
  <data name="Soft_Element_Init" xml:space="preserve">
    <value>Soft Element Initialize(_I)</value>
  </data>
  <data name="Error_List" xml:space="preserve">
    <value>Error List(_E)</value>
  </data>
  <data name="Breakpoint_List" xml:space="preserve">
    <value>Breakpoint List(_B)</value>
  </data>
  <data name="Redo" xml:space="preserve">
    <value>Redo(_R)</value>
  </data>
  <data name="Undo" xml:space="preserve">
    <value>Undo(_U)</value>
  </data>
  <data name="Cut" xml:space="preserve">
    <value>Cut(_T)</value>
  </data>
  <data name="Paste" xml:space="preserve">
    <value>Paste(_P)</value>
  </data>
  <data name="Copy" xml:space="preserve">
    <value>Copy(_C)</value>
  </data>
  <data name="Menu_Search" xml:space="preserve">
    <value>Search(_F)</value>
  </data>
  <data name="Replace" xml:space="preserve">
    <value>Replace(_R)</value>
  </data>
  <data name="New_Proj" xml:space="preserve">
    <value>New Project(_N)</value>
  </data>
  <data name="Open_Proj" xml:space="preserve">
    <value>Open Project(_O)</value>
  </data>
  <data name="Save_Proj" xml:space="preserve">
    <value>Save Project(_S)</value>
  </data>
  <data name="Del" xml:space="preserve">
    <value>Delete(_D)</value>
  </data>
  <data name="Chinese" xml:space="preserve">
    <value>Chinese</value>
  </data>
  <data name="English" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="View_Help" xml:space="preserve">
    <value>View Help</value>
  </data>
  <data name="Ret_Edit_Mode" xml:space="preserve">
    <value>Return To Edit Mode</value>
  </data>
  <data name="Ladder_Check" xml:space="preserve">
    <value>Ladder Check</value>
  </data>
  <data name="Funcblock_Checked" xml:space="preserve">
    <value>FuncBlock Check</value>
  </data>
  <data name="Add_SubRoutine" xml:space="preserve">
    <value>Add SubRoutine</value>
  </data>
  <data name="Add_FuncBlock" xml:space="preserve">
    <value>Add FuncBlock</value>
  </data>
  <data name="Add_Modbus_Table" xml:space="preserve">
    <value>Add Modbus Table</value>
  </data>
  <data name="Property_Proj" xml:space="preserve">
    <value>Property</value>
  </data>
  <data name="Monitor_List" xml:space="preserve">
    <value>Monitor List</value>
  </data>
  <data name="Option" xml:space="preserve">
    <value>Option</value>
  </data>
  <data name="Close_Proj" xml:space="preserve">
    <value>Close Project</value>
  </data>
</root>