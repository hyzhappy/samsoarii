<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Ensure" xml:space="preserve">
    <value>Ensure</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Element_Comment" xml:space="preserve">
    <value>Element Comment</value>
  </data>
  <data name="Parameter_Description" xml:space="preserve">
    <value>Parameter Description</value>
  </data>
  <data name="Element_Parameter_Setting" xml:space="preserve">
    <value>Element Parameter Setting</value>
  </data>
  <data name="Data_Type" xml:space="preserve">
    <value>Data Type</value>
  </data>
  <data name="Element_Value_Modify" xml:space="preserve">
    <value>ElementValueModify</value>
  </data>
  <data name="Write_In" xml:space="preserve">
    <value>Write In</value>
  </data>
  <data name="Write_ON" xml:space="preserve">
    <value>Write ON</value>
  </data>
  <data name="Write_OFF" xml:space="preserve">
    <value>Write OFF</value>
  </data>
  <data name="Force_ON" xml:space="preserve">
    <value>Force ON</value>
  </data>
  <data name="Force_OFF" xml:space="preserve">
    <value>Force OFF</value>
  </data>
  <data name="Cancel_Force" xml:space="preserve">
    <value>Cancel Force</value>
  </data>
  <data name="Cancel_All_Force" xml:space="preserve">
    <value>Cancel Al Force</value>
  </data>
  <data name="Connection_Mode" xml:space="preserve">
    <value>Connection Mode</value>
  </data>
  <data name="Communication_Parameter_Setting" xml:space="preserve">
    <value>Communication Parameter Setting</value>
  </data>
  <data name="Auto_Check" xml:space="preserve">
    <value>Auto Check</value>
  </data>
  <data name="Manual" xml:space="preserve">
    <value>Manual</value>
  </data>
  <data name="AddNewSubRoutine" xml:space="preserve">
    <value>AddNewSubRoutine</value>
  </data>
  <data name="SubRoutine_Name" xml:space="preserve">
    <value>SubRoutine Name</value>
  </data>
  <data name="CommunicationSetting" xml:space="preserve">
    <value>Communication Setting</value>
  </data>
  <data name="Communication_Test" xml:space="preserve">
    <value>Communication Test</value>
  </data>
  <data name="Timeout" xml:space="preserve">
    <value>Timeout</value>
  </data>
  <data name="Data_Bit" xml:space="preserve">
    <value>Data Bit</value>
  </data>
  <data name="Stop_Bit" xml:space="preserve">
    <value>Stop Bit</value>
  </data>
  <data name="Check_Code" xml:space="preserve">
    <value>Check Code</value>
  </data>
  <data name="Baud_Rate" xml:space="preserve">
    <value>Baud Rate</value>
  </data>
  <data name="Serialport" xml:space="preserve">
    <value>Serialport</value>
  </data>
  <data name="Browse" xml:space="preserve">
    <value>Browse</value>
  </data>
  <data name="Path" xml:space="preserve">
    <value>Path</value>
  </data>
  <data name="Import" xml:space="preserve">
    <value>Import</value>
  </data>
  <data name="Export" xml:space="preserve">
    <value>Export</value>
  </data>
  <data name="File" xml:space="preserve">
    <value>File</value>
  </data>
  <data name="File_Name" xml:space="preserve">
    <value>File Name</value>
  </data>
  <data name="Separator_Select" xml:space="preserve">
    <value>Separator Select</value>
  </data>
  <data name="Parse_Error_By_Wrong_Separator" xml:space="preserve">
    <value>Parse Error By Wrong Separator</value>
  </data>
  <data name="CSV_Import" xml:space="preserve">
    <value>CSV Import</value>
  </data>
  <data name="CSV_Export" xml:space="preserve">
    <value>CSV Export</value>
  </data>
  <data name="Default" xml:space="preserve">
    <value>Default</value>
  </data>
  <data name="Message_Default" xml:space="preserve">
    <value>Do you want to restore the default?</value>
  </data>
  <data name="Instruction_Input" xml:space="preserve">
    <value>Instruction Input</value>
  </data>
  <data name="Help" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="LaddreDiagram" xml:space="preserve">
    <value>LadderDiagram</value>
  </data>
  <data name="Annotation_Edit" xml:space="preserve">
    <value>Annotation Edit</value>
  </data>
  <data name="Detailed_Description" xml:space="preserve">
    <value>Detailed Description</value>
  </data>
  <data name="Language_Locale_Setting" xml:space="preserve">
    <value>Language Locale Setting</value>
  </data>
  <data name="Message_Lang" xml:space="preserve">
    <value>Changes to language settings only take effect after program restart!</value>
  </data>
  <data name="Network_Number" xml:space="preserve">
    <value>Network Number</value>
  </data>
  <data name="Brief_Description" xml:space="preserve">
    <value>Brief Description</value>
  </data>
  <data name="New_Project" xml:space="preserve">
    <value>New Project</value>
  </data>
  <data name="PLC_Type" xml:space="preserve">
    <value>PLC Type</value>
  </data>
  <data name="Project_Setting" xml:space="preserve">
    <value>Project Setting</value>
  </data>
  <data name="Setting" xml:space="preserve">
    <value>Setting</value>
  </data>
  <data name="Project_Name" xml:space="preserve">
    <value>Project Name</value>
  </data>
  <data name="Number_Lock" xml:space="preserve">
    <value>Number Lock</value>
  </data>
  <data name="Lock" xml:space="preserve">
    <value>Lock</value>
  </data>
  <data name="Message_Is_Override" xml:space="preserve">
    <value>Whether it is covered</value>
  </data>
  <data name="Message_Already_Exist" xml:space="preserve">
    <value>already exists in the current directory</value>
  </data>
  <data name="Valid_Range" xml:space="preserve">
    <value>The valid range is</value>
  </data>
  <data name="Comment" xml:space="preserve">
    <value>Comment</value>
  </data>
  <data name="Communication_Download_Data" xml:space="preserve">
    <value>Download Data</value>
  </data>
  <data name="Initialize" xml:space="preserve">
    <value>Initialize</value>
  </data>
  <data name="Memory_Used" xml:space="preserve">
    <value>Memory Used:</value>
  </data>
  <data name="Modify" xml:space="preserve">
    <value>Modify</value>
  </data>
  <data name="Monitor" xml:space="preserve">
    <value>Monitor</value>
  </data>
  <data name="Program" xml:space="preserve">
    <value>Program</value>
  </data>
</root>